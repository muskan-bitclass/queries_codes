with category_tagging as 
(
	select code
			, case when p1 IS NULL then dt1
					when p2 is NULL then dt2
						else dt3 end as c0
			, case when p1 is not null and (t1 = p2 or t1 = p3) then dt1
					when p2 is not null and (t2 = p1 or t2 = p3) then dt2
					when p3 is not null and (t3 = p2 or t3 = p1) then dt3
						end as c1
			, case when p1 is not null and (t1 <> p2 and t1 <> p3) then dt1
					when p2 is not null and (t2 <> p1 or t2 <> p3) then dt2
					when p3 is not null and (t3 <> p2 or t3 <> p1) then dt3	
						end as c2
	from
	(
		select code, internal_categories, internal_categories[1] t1, internal_categories[2] t2, internal_categories[3] t3, b.parent_category_ids[1] p1, c.parent_category_ids[1] p2, d.parent_category_ids[1] p3, b.display_text dt1, c.display_text dt2, d.display_text dt3
		from courses a
		left join course_categories b
		on a.internal_categories[1] = b.id
		left join course_categories c
		on a.internal_categories[2] = c.id
		left join course_categories d
		on a.internal_categories[3] = d.id
		where a.start_date >= '2022-01-01'
		and a.deleted_at IS NULL
	) a
)


--select * from category_tagging
--select * from courses

select c0, 
extract (year from order_Date) as order_year, 
extract (month from order_date) as order_month,
count(buyer_Code) as registrations from (
select
   * 
from
   (
(
      select
         buyer_code, course_code, date(created_at + interval '5.5 hours') as order_date, amount 
      from
         orders 
      where
         deleted_at is null 
         and status = 'paid' 
         and date(created_at + interval '5.5 hours') >= '2022-01-01' ) orders_table 
         join
         
         (select code from courses where deleted_at is null) courses_table 
         on
         orders_table.course_code = courses_table.code
         join 
        
            (
               select
                  code,
                  c0 
               from
                  category_tagging
            )
            category 
            on category.code = courses_table.Code 
         join
            (
               select
                  code as user_code 
               from
                  users 
               where
                  users.meta ->> 'tag' is null
            )
            users_table 
            on orders_table.buyer_code = users_table.user_code 
   )
	innerQ 
)innerq group by 1,2,3 order by 2,3
